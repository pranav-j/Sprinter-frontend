"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-minimal-pie-chart";
exports.ids = ["vendor-chunks/react-minimal-pie-chart"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-minimal-pie-chart/es/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/react-minimal-pie-chart/es/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PieChart: () => (/* binding */ ReactMinimalPieChart),\n/* harmony export */   pieChartDefaultProps: () => (/* binding */ defaultProps)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction degreesToRadians(degrees) {\n  return degrees * Math.PI / 180;\n}\nfunction valueBetween(value, min, max) {\n  if (value > max) return max;\n  if (value < min) return min;\n  return value;\n}\nfunction extractPercentage(value, percentage) {\n  return percentage / 100 * value;\n}\nfunction bisectorAngle(startAngle, lengthAngle) {\n  return startAngle + lengthAngle / 2;\n}\nfunction shiftVectorAlongAngle(angle, distance) {\n  var angleRadians = degreesToRadians(angle);\n  return {\n    dx: distance * Math.cos(angleRadians),\n    dy: distance * Math.sin(angleRadians)\n  };\n}\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\nfunction functionProp(prop, payload) {\n  return typeof prop === 'function' ? prop(payload) : prop;\n}\nfunction makePropsWithDefaults(props, defaultProps) {\n  var result = Object.assign({}, defaultProps, props);\n\n  // @NOTE Object.assign doesn't default properties with undefined value (like React defaultProps does)\n  for (var key in defaultProps) {\n    if (props[key] === undefined) {\n      result[key] = defaultProps[key];\n    }\n  }\n  return result;\n}\n\nfunction sumValues(data) {\n  var sum = 0;\n  for (var i = 0; i < data.length; i++) {\n    sum += data[i].value;\n  }\n  return sum;\n}\n\n// Append \"percentage\", \"degrees\" and \"startAngle\" to each data entry\nfunction extendData(_ref) {\n  var data = _ref.data,\n    totalAngle = _ref.lengthAngle,\n    totalValue = _ref.totalValue,\n    paddingAngle = _ref.paddingAngle,\n    chartStartAngle = _ref.startAngle;\n  var total = totalValue || sumValues(data);\n  var normalizedTotalAngle = valueBetween(totalAngle, -360, 360);\n  var numberOfPaddings = Math.abs(normalizedTotalAngle) === 360 ? data.length : data.length - 1;\n  var singlePaddingDegrees = Math.abs(paddingAngle) * Math.sign(totalAngle);\n  var degreesTakenByPadding = singlePaddingDegrees * numberOfPaddings;\n  var degreesTakenByPaths = normalizedTotalAngle - degreesTakenByPadding;\n  var lastSegmentEnd = 0;\n  var extendedData = [];\n\n  // @NOTE: Shall we evaluate percentage accordingly to dataEntry.value's sign?\n  for (var i = 0; i < data.length; i++) {\n    var dataEntry = data[i];\n    var valueInPercentage = total === 0 ? 0 : dataEntry.value / total * 100;\n    var degrees = extractPercentage(degreesTakenByPaths, valueInPercentage);\n    var startAngle = lastSegmentEnd + chartStartAngle;\n    lastSegmentEnd = lastSegmentEnd + degrees + singlePaddingDegrees;\n    extendedData.push(Object.assign({\n      percentage: valueInPercentage,\n      startAngle: startAngle,\n      degrees: degrees\n    }, dataEntry));\n  }\n  return extendedData;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nfunction ReactMinimalPieChartLabel(_ref) {\n  var renderLabel = _ref.renderLabel,\n    labelProps = _ref.labelProps;\n  var label = renderLabel(labelProps);\n\n  // Default label\n  if (typeof label === 'string' || typeof label === 'number') {\n    labelProps.dataEntry;\n      labelProps.dataIndex;\n      var props = _objectWithoutPropertiesLoose(labelProps, [\"dataEntry\", \"dataIndex\"]);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"text\", Object.assign({\n      dominantBaseline: \"central\"\n    }, props), label);\n  }\n  if (react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(label)) {\n    return label;\n  }\n  return null;\n}\n\nfunction round(number) {\n  var divisor = 1e14; // 14 decimals\n  return Math.round((number + Number.EPSILON) * divisor) / divisor;\n}\nfunction evaluateTextAnchorPosition(_ref) {\n  var labelPosition = _ref.labelPosition,\n    lineWidth = _ref.lineWidth,\n    labelHorizontalShift = _ref.labelHorizontalShift;\n  var dx = round(labelHorizontalShift);\n  // Label in the vertical center\n  if (dx === 0) {\n    return 'middle';\n  }\n  // Outward label\n  if (labelPosition > 100) {\n    return dx > 0 ? 'start' : 'end';\n  }\n  // Inward label\n  var innerRadius = 100 - lineWidth;\n  if (labelPosition < innerRadius) {\n    return dx > 0 ? 'end' : 'start';\n  }\n  // Overlying label\n  return 'middle';\n}\nfunction makeLabelRenderProps(data, props) {\n  return data.map(function (dataEntry, index) {\n    var _functionProp;\n    var segmentsShift = (_functionProp = functionProp(props.segmentsShift, index)) != null ? _functionProp : 0;\n    var distanceFromCenter = extractPercentage(props.radius, props.labelPosition) + segmentsShift;\n    var _shiftVectorAlongAngl = shiftVectorAlongAngle(bisectorAngle(dataEntry.startAngle, dataEntry.degrees), distanceFromCenter),\n      dx = _shiftVectorAlongAngl.dx,\n      dy = _shiftVectorAlongAngl.dy; // This object is passed as argument to the \"label\" function prop\n    var labelRenderProps = {\n      x: props.center[0],\n      y: props.center[1],\n      dx: dx,\n      dy: dy,\n      textAnchor: evaluateTextAnchorPosition({\n        labelPosition: props.labelPosition,\n        lineWidth: props.lineWidth,\n        labelHorizontalShift: dx\n      }),\n      dataEntry: dataEntry,\n      dataIndex: index,\n      style: functionProp(props.labelStyle, index)\n    };\n    return labelRenderProps;\n  });\n}\nfunction renderLabels(data, props) {\n  var label = props.label;\n  if (label) {\n    return makeLabelRenderProps(data, props).map(function (labelRenderProps, index) {\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ReactMinimalPieChartLabel, {\n        key: \"label-\" + (labelRenderProps.dataEntry.key || index),\n        renderLabel: label,\n        labelProps: labelRenderProps\n      });\n    });\n  }\n}\n\n// from http://stackoverflow.com/a/18473154\nvar partialCircle = function partialCircle(cx, cy, r, start, end) {\n  var length = end - start;\n  if (length === 0) return [];\n  var fromX = r * Math.cos(start) + cx;\n  var fromY = r * Math.sin(start) + cy;\n  var toX = r * Math.cos(end) + cx;\n  var toY = r * Math.sin(end) + cy;\n  var large = Math.abs(length) <= Math.PI ? '0' : '1';\n  var sweep = length < 0 ? '0' : '1';\n  return [['M', fromX, fromY], ['A', r, r, 0, large, sweep, toX, toY]];\n};\nvar svgPartialCircle = partialCircle;\n\nvar partialCircle$1 = svgPartialCircle;\n\nfunction makePathCommands(cx, cy, startAngle, lengthAngle, radius) {\n  var patchedLengthAngle = valueBetween(lengthAngle, -359.999, 359.999);\n  return partialCircle$1(cx, cy,\n  // center X and Y\n  radius, degreesToRadians(startAngle), degreesToRadians(startAngle + patchedLengthAngle)).map(function (command) {\n    return command.join(' ');\n  }).join(' ');\n}\nfunction ReactMinimalPieChartPath(_ref) {\n  var cx = _ref.cx,\n    cy = _ref.cy,\n    lengthAngle = _ref.lengthAngle,\n    lineWidth = _ref.lineWidth,\n    radius = _ref.radius,\n    _ref$shift = _ref.shift,\n    shift = _ref$shift === void 0 ? 0 : _ref$shift,\n    reveal = _ref.reveal,\n    rounded = _ref.rounded,\n    startAngle = _ref.startAngle,\n    title = _ref.title,\n    props = _objectWithoutPropertiesLoose(_ref, [\"cx\", \"cy\", \"lengthAngle\", \"lineWidth\", \"radius\", \"shift\", \"reveal\", \"rounded\", \"startAngle\", \"title\"]);\n  var pathRadius = radius - lineWidth / 2;\n  //@NOTE This shift might be rendered as a translation in future\n  var _shiftVectorAlongAngl = shiftVectorAlongAngle(bisectorAngle(startAngle, lengthAngle), shift),\n    dx = _shiftVectorAlongAngl.dx,\n    dy = _shiftVectorAlongAngl.dy;\n  var pathCommands = makePathCommands(cx + dx, cy + dy, startAngle, lengthAngle, pathRadius);\n  var strokeDasharray;\n  var strokeDashoffset;\n\n  // Animate/hide paths with \"stroke-dasharray\" + \"stroke-dashoffset\"\n  // https://css-tricks.com/svg-line-animation-works/\n  if (isNumber(reveal)) {\n    var pathLength = degreesToRadians(pathRadius) * lengthAngle;\n    strokeDasharray = Math.abs(pathLength);\n    strokeDashoffset = strokeDasharray - extractPercentage(strokeDasharray, reveal);\n  }\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", Object.assign({\n    d: pathCommands,\n    fill: \"none\",\n    strokeWidth: lineWidth,\n    strokeDasharray: strokeDasharray,\n    strokeDashoffset: strokeDashoffset,\n    strokeLinecap: rounded ? 'round' : undefined\n  }, props), title && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"title\", null, title));\n}\n\nfunction combineSegmentTransitionsStyle(duration, easing, customStyle) {\n  // Merge chart's animation CSS transition with \"transition\" found to customStyle\n  var transition = \"stroke-dashoffset \" + duration + \"ms \" + easing;\n  if (customStyle && customStyle.transition) {\n    transition = transition + \",\" + customStyle.transition;\n  }\n  return {\n    transition: transition\n  };\n}\nfunction getRevealValue(props) {\n  //@NOTE When animation is on, chart has to be fully revealed when reveal is not set\n  if (props.animate && !isNumber(props.reveal)) {\n    return 100;\n  }\n  return props.reveal;\n}\nfunction makeEventHandler(eventHandler, payload) {\n  return eventHandler && function (e) {\n    eventHandler(e, payload);\n  };\n}\nfunction renderSegments(data, props, revealOverride) {\n  // @NOTE this should go in Path component. Here for performance reasons\n  var reveal = revealOverride != null ? revealOverride : getRevealValue(props);\n  var radius = props.radius,\n    _props$center = props.center,\n    cx = _props$center[0],\n    cy = _props$center[1];\n  var lineWidth = extractPercentage(radius, props.lineWidth);\n  var paths = data.map(function (dataEntry, index) {\n    var segmentsStyle = functionProp(props.segmentsStyle, index);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ReactMinimalPieChartPath, {\n      cx: cx,\n      cy: cy,\n      key: dataEntry.key || index,\n      lengthAngle: dataEntry.degrees,\n      lineWidth: lineWidth,\n      radius: radius,\n      rounded: props.rounded,\n      reveal: reveal,\n      shift: functionProp(props.segmentsShift, index),\n      startAngle: dataEntry.startAngle,\n      title: dataEntry.title,\n      style: Object.assign({}, segmentsStyle, props.animate && combineSegmentTransitionsStyle(props.animationDuration, props.animationEasing, segmentsStyle)),\n      stroke: dataEntry.color,\n      tabIndex: props.segmentsTabIndex,\n      onBlur: makeEventHandler(props.onBlur, index),\n      onClick: makeEventHandler(props.onClick, index),\n      onFocus: makeEventHandler(props.onFocus, index),\n      onKeyDown: makeEventHandler(props.onKeyDown, index),\n      onMouseOver: makeEventHandler(props.onMouseOver, index),\n      onMouseOut: makeEventHandler(props.onMouseOut, index)\n    });\n  });\n  if (props.background) {\n    paths.unshift( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ReactMinimalPieChartPath, {\n      cx: cx,\n      cy: cy,\n      key: \"bg\",\n      lengthAngle: props.lengthAngle,\n      lineWidth: lineWidth,\n      radius: radius,\n      rounded: props.rounded,\n      startAngle: props.startAngle,\n      stroke: props.background\n    }));\n  }\n  return paths;\n}\n\nvar defaultProps = {\n  animationDuration: 500,\n  animationEasing: 'ease-out',\n  center: [50, 50],\n  data: [],\n  labelPosition: 50,\n  lengthAngle: 360,\n  lineWidth: 100,\n  paddingAngle: 0,\n  radius: 50,\n  startAngle: 0,\n  viewBoxSize: [100, 100]\n};\nfunction ReactMinimalPieChart(originalProps) {\n  var props = makePropsWithDefaults(originalProps,\n  // @ts-expect-error: defaultProps.data is typed as BaseDataEntry\n  defaultProps);\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(props.animate ? 0 : null),\n    revealOverride = _useState[0],\n    setRevealOverride = _useState[1];\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (props.animate) {\n      // Trigger initial animation\n      setRevealOverride(null);\n    }\n  }, []);\n  var extendedData = extendData(props);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n    viewBox: \"0 0 \" + props.viewBoxSize[0] + \" \" + props.viewBoxSize[1],\n    width: \"100%\",\n    height: \"100%\",\n    className: props.className,\n    style: props.style\n  }, renderSegments(extendedData, props, revealOverride), renderLabels(extendedData, props), props.children);\n}\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-minimal-pie-chart/es/index.js\n");

/***/ })

};
;