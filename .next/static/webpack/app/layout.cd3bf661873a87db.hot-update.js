"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./redux/slices/items/itemsSlice.ts":
/*!******************************************!*\
  !*** ./redux/slices/items/itemsSlice.ts ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addComment: function() { return /* binding */ addComment; },\n/* harmony export */   changeItemStatus: function() { return /* binding */ changeItemStatus; },\n/* harmony export */   createItem: function() { return /* binding */ createItem; },\n/* harmony export */   deleteItem: function() { return /* binding */ deleteItem; },\n/* harmony export */   fetchItems: function() { return /* binding */ fetchItems; },\n/* harmony export */   moveItem: function() { return /* binding */ moveItem; },\n/* harmony export */   resetUpdateItemStatus: function() { return /* binding */ resetUpdateItemStatus; },\n/* harmony export */   updateItem: function() { return /* binding */ updateItem; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"(app-pages-browser)/./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n\n\nconst initialState = {\n    fetchStatus: \"idle\",\n    updateItemStatus: \"idle\",\n    deleteItemStatus: \"idle\",\n    changeItemStatusStatus: \"idle\",\n    items: [],\n    errorFetchingItems: null,\n    errorCreatingItem: null,\n    errorUpdatingItem: null,\n    errorDeletingItem: null,\n    errorCommenting: null,\n    errorUpdatingItemStatus: null\n};\nconst fetchItems = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"items/fetchItems\", async (currentProjectId)=>{\n    const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(\"http://localhost:3030/api/items?projectId=\".concat(currentProjectId), {\n        withCredentials: true\n    });\n    return response.data.items;\n});\n// export const createItem = createAsyncThunk<Itemm, Omit<Itemm, '_id' | 'createdAt' | 'updatedAt' | 'sprintId' | 'status' | 'order' >>('items/createItem', async(newItem) => {\n//     const response = await axios.post(\"http://localhost:3030/api/item\", newItem, { withCredentials: true });\n//     return response.data;\n// });\nconst createItem = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"items/createItem\", async (formData)=>{\n    const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].post(\"http://localhost:3030/api/item\", formData, {\n        headers: {\n            \"Content-Type\": \"multipart/form-data\"\n        },\n        withCredentials: true\n    });\n    return response.data;\n});\nconst updateItem = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"items/updateItem\", async (param)=>{\n    let { itemId, updatedData } = param;\n    const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].put(\"http://localhost:3030/api/item/\".concat(itemId), updatedData, {\n        withCredentials: true\n    });\n    return response.data;\n});\nconst changeItemStatus = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"item/changeItemStatus\", async (param)=>{\n    let { itemId, statusId } = param;\n    const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].post(\"http://localhost:3030/api/changeItemStatus\", {\n        itemId,\n        statusId\n    }, {\n        withCredentials: true\n    });\n    return response.data;\n});\nconst addComment = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"items/addComment\", async (param)=>{\n    let { itemId, comment } = param;\n    const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].post(\"http://localhost:3030/api/comment/\".concat(itemId), {\n        comment\n    }, {\n        withCredentials: true\n    });\n    return response.data;\n});\nconst deleteItem = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"items/deleteItem\", async (itemId)=>{\n    await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].delete(\"http://localhost:3030/api/item/\".concat(itemId), {\n        withCredentials: true\n    });\n    return itemId;\n});\nconst moveItem = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"items/moveItem\", async (param)=>{\n    let { insertAt, draggableItemId, draggableItemSprintId, moveToSprintId, moveItemToBacklog, currentProjectId } = param;\n    const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].post(\"http://localhost:3030/api/moveItem\", {\n        insertAt,\n        itemId: draggableItemId,\n        itemSprintId: draggableItemSprintId,\n        moveToSprintId,\n        moveItemToBacklog,\n        projectId: currentProjectId\n    }, {\n        withCredentials: true\n    });\n    return response.data;\n});\nconst itemsSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: \"items\",\n    initialState,\n    reducers: {\n        resetUpdateItemStatus: (state)=>{\n            state.updateItemStatus = \"idle\";\n        }\n    },\n    extraReducers: (builder)=>{\n        builder.addCase(fetchItems.pending, (state)=>{\n            state.fetchStatus = \"pending\";\n        }).addCase(fetchItems.fulfilled, (state, action)=>{\n            state.fetchStatus = \"fulfilled\";\n            state.items = action.payload;\n        }).addCase(fetchItems.rejected, (state, action)=>{\n            state.fetchStatus = \"rejected\";\n            state.errorFetchingItems = action.error.message || \"Failed to fetch items\";\n        }).addCase(createItem.fulfilled, (state, action)=>{\n            state.items.push(action.payload);\n        }).addCase(createItem.rejected, (state, action)=>{\n            state.errorCreatingItem = action.error.message || \"Failed to create item\";\n        }).addCase(updateItem.pending, (state)=>{\n            state.updateItemStatus = \"pending\";\n        }).addCase(updateItem.fulfilled, (state, action)=>{\n            const index = state.items.findIndex((item)=>item._id === action.payload._id);\n            if (index !== -1) {\n                state.items[index] = action.payload;\n            }\n            state.updateItemStatus = \"fulfilled\";\n        }).addCase(updateItem.rejected, (state, action)=>{\n            state.errorUpdatingItem = action.error.message || \"Failed to updating item\";\n            state.updateItemStatus = \"rejected\";\n        }).addCase(addComment.fulfilled, (state, action)=>{\n            const index = state.items.findIndex((item)=>item._id === action.payload._id);\n            if (index !== -1) {\n                state.items[index] = action.payload;\n            }\n        }).addCase(deleteItem.pending, (state)=>{\n            state.deleteItemStatus = \"pending\";\n        }).addCase(deleteItem.fulfilled, (state, action)=>{\n            state.items = state.items.filter((item)=>item._id !== action.payload);\n            state.deleteItemStatus = \"fulfilled\";\n        }).addCase(deleteItem.rejected, (state, action)=>{\n            state.deleteItemStatus = \"rejected\";\n            state.errorDeletingItem = action.error.message || \"Failed to delete item\";\n        }).addCase(moveItem.fulfilled, (state, action)=>{\n            const index = state.items.findIndex((item)=>item._id === action.payload.updatedItem._id);\n            if (index !== -1) {\n                state.items[index] = action.payload.updatedItem;\n            }\n            action.payload.updatedOrder.forEach((itemOrder)=>{\n                const index = state.items.findIndex((item)=>item._id === itemOrder._id);\n                if (index !== -1) {\n                    state.items[index].order = itemOrder.order;\n                }\n            });\n        }).addCase(changeItemStatus.pending, (state)=>{\n            state.changeItemStatusStatus = \"pending\";\n        }).addCase(changeItemStatus.fulfilled, (state, action)=>{\n            const index = state.items.findIndex((item)=>item._id === action.payload.updatedItem._id);\n            if (index !== -1) {\n                state.items[index] = action.payload.updatedItem;\n            }\n            state.changeItemStatusStatus = \"fulfilled\";\n        }).addCase(changeItemStatus.rejected, (state, action)=>{\n            state.changeItemStatusStatus = \"rejected\";\n            state.errorUpdatingItemStatus = action.error.message || \"Failed to change item status\";\n        });\n    }\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (itemsSlice.reducer);\nconst { resetUpdateItemStatus } = itemsSlice.actions;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./redux/slices/items/itemsSlice.ts\n"));

/***/ })

});