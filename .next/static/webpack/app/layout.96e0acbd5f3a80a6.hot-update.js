"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./redux/slices/chat/chatSlice.ts":
/*!****************************************!*\
  !*** ./redux/slices/chat/chatSlice.ts ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addNewMessage: function() { return /* binding */ addNewMessage; },\n/* harmony export */   addOldMessages: function() { return /* binding */ addOldMessages; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"(app-pages-browser)/./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n\nconst initialState = {\n    messages: []\n};\nconst chatSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: \"chat\",\n    initialState,\n    reducers: {\n        addNewMessage: (state, action)=>{\n            state.messages.push(action.payload);\n        },\n        addOldMessages: (state, action)=>{\n            const existingMessageIds = new Set(state.messages.map((message)=>message.sentAt)); // Use a unique identifier\n            const newMessages = action.payload.filter((message)=>!existingMessageIds.has(message.sentAt)); // Filter duplicates\n            state.messages = [\n                ...newMessages,\n                ...state.messages\n            ]; // Add only new messages\n        }\n    }\n});\nconst { addNewMessage, addOldMessages } = chatSlice.actions;\n/* harmony default export */ __webpack_exports__[\"default\"] = (chatSlice.reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3JlZHV4L3NsaWNlcy9jaGF0L2NoYXRTbGljZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEQ7QUFnQjlELE1BQU1DLGVBQTBCO0lBQzVCQyxVQUFVLEVBQUU7QUFDaEI7QUFFQSxNQUFNQyxZQUFZSCw2REFBV0EsQ0FBQztJQUMxQkksTUFBTTtJQUNOSDtJQUNBSSxVQUFVO1FBQ05DLGVBQWUsQ0FBQ0MsT0FBT0M7WUFDbkJELE1BQU1MLFFBQVEsQ0FBQ08sSUFBSSxDQUFDRCxPQUFPRSxPQUFPO1FBQ3RDO1FBQ0FDLGdCQUFnQixDQUFDSixPQUFPQztZQUNwQixNQUFNSSxxQkFBcUIsSUFBSUMsSUFBSU4sTUFBTUwsUUFBUSxDQUFDWSxHQUFHLENBQUNDLENBQUFBLFVBQVdBLFFBQVFDLE1BQU0sSUFBSSwwQkFBMEI7WUFDN0csTUFBTUMsY0FBY1QsT0FBT0UsT0FBTyxDQUFDUSxNQUFNLENBQUNILENBQUFBLFVBQVcsQ0FBQ0gsbUJBQW1CTyxHQUFHLENBQUNKLFFBQVFDLE1BQU0sSUFBSSxvQkFBb0I7WUFDbkhULE1BQU1MLFFBQVEsR0FBRzttQkFBSWU7bUJBQWdCVixNQUFNTCxRQUFRO2FBQUMsRUFBRSx3QkFBd0I7UUFDbEY7SUFLSjtBQUNKO0FBRU8sTUFBTSxFQUFFSSxhQUFhLEVBQUVLLGNBQWMsRUFBRSxHQUFHUixVQUFVaUIsT0FBTyxDQUFDO0FBQ25FLCtEQUFlakIsVUFBVWtCLE9BQU8sRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9yZWR1eC9zbGljZXMvY2hhdC9jaGF0U2xpY2UudHM/NWVhZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVTbGljZSwgUGF5bG9hZEFjdGlvbiB9IGZyb20gXCJAcmVkdXhqcy90b29sa2l0XCI7XG5cblxuZXhwb3J0IGludGVyZmFjZSBNZXNzYWdlIHtcbiAgICBtZXNzYWdlQ29udGVudDogc3RyaW5nO1xuICAgIHNlbmRlcklkPzogc3RyaW5nO1xuICAgIHJlY2VpdmVySWQ/OiBzdHJpbmc7XG4gICAgcHJvamVjdElkPzogc3RyaW5nO1xuICAgIHByb2plY3RHcm91cElkPzogc3RyaW5nO1xuICAgIHNlbnRBdD86IHN0cmluZyB8IERhdGU7XG59O1xuXG5pbnRlcmZhY2UgQ2hhdFN0YXRlIHtcbiAgICBtZXNzYWdlczogTWVzc2FnZVtdO1xufTtcblxuY29uc3QgaW5pdGlhbFN0YXRlOiBDaGF0U3RhdGUgPSB7XG4gICAgbWVzc2FnZXM6IFtdXG59O1xuXG5jb25zdCBjaGF0U2xpY2UgPSBjcmVhdGVTbGljZSh7XG4gICAgbmFtZTogJ2NoYXQnLFxuICAgIGluaXRpYWxTdGF0ZSxcbiAgICByZWR1Y2Vyczoge1xuICAgICAgICBhZGROZXdNZXNzYWdlOiAoc3RhdGUsIGFjdGlvbjogUGF5bG9hZEFjdGlvbjxNZXNzYWdlPikgPT4ge1xuICAgICAgICAgICAgc3RhdGUubWVzc2FnZXMucHVzaChhY3Rpb24ucGF5bG9hZCk7XG4gICAgICAgIH0sXG4gICAgICAgIGFkZE9sZE1lc3NhZ2VzOiAoc3RhdGUsIGFjdGlvbjogUGF5bG9hZEFjdGlvbjxNZXNzYWdlW10+KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBleGlzdGluZ01lc3NhZ2VJZHMgPSBuZXcgU2V0KHN0YXRlLm1lc3NhZ2VzLm1hcChtZXNzYWdlID0+IG1lc3NhZ2Uuc2VudEF0KSk7IC8vIFVzZSBhIHVuaXF1ZSBpZGVudGlmaWVyXG4gICAgICAgICAgICBjb25zdCBuZXdNZXNzYWdlcyA9IGFjdGlvbi5wYXlsb2FkLmZpbHRlcihtZXNzYWdlID0+ICFleGlzdGluZ01lc3NhZ2VJZHMuaGFzKG1lc3NhZ2Uuc2VudEF0KSk7IC8vIEZpbHRlciBkdXBsaWNhdGVzXG4gICAgICAgICAgICBzdGF0ZS5tZXNzYWdlcyA9IFsuLi5uZXdNZXNzYWdlcywgLi4uc3RhdGUubWVzc2FnZXNdOyAvLyBBZGQgb25seSBuZXcgbWVzc2FnZXNcbiAgICAgICAgfSxcbiAgICAgICAgXG4gICAgICAgIC8vIGFkZE9sZE1lc3NhZ2VzOiAoc3RhdGUsIGFjdGlvbjogUGF5bG9hZEFjdGlvbjxNZXNzYWdlW10+KSA9PiB7XG4gICAgICAgIC8vICAgICBzdGF0ZS5tZXNzYWdlcyA9IFsuLi5hY3Rpb24ucGF5bG9hZCwgLi4uc3RhdGUubWVzc2FnZXNdO1xuICAgICAgICAvLyB9LFxuICAgIH1cbn0pO1xuXG5leHBvcnQgY29uc3QgeyBhZGROZXdNZXNzYWdlLCBhZGRPbGRNZXNzYWdlcyB9ID0gY2hhdFNsaWNlLmFjdGlvbnM7XG5leHBvcnQgZGVmYXVsdCBjaGF0U2xpY2UucmVkdWNlcjsiXSwibmFtZXMiOlsiY3JlYXRlU2xpY2UiLCJpbml0aWFsU3RhdGUiLCJtZXNzYWdlcyIsImNoYXRTbGljZSIsIm5hbWUiLCJyZWR1Y2VycyIsImFkZE5ld01lc3NhZ2UiLCJzdGF0ZSIsImFjdGlvbiIsInB1c2giLCJwYXlsb2FkIiwiYWRkT2xkTWVzc2FnZXMiLCJleGlzdGluZ01lc3NhZ2VJZHMiLCJTZXQiLCJtYXAiLCJtZXNzYWdlIiwic2VudEF0IiwibmV3TWVzc2FnZXMiLCJmaWx0ZXIiLCJoYXMiLCJhY3Rpb25zIiwicmVkdWNlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./redux/slices/chat/chatSlice.ts\n"));

/***/ })

});